{
    "info": {
        "_postman_id": "gitstake-api-collection",
        "name": "GitStake API Collection",
        "description": "Complete API collection for GitStake - Advanced GitHub Analytics & Developer Recognition Platform with Dual AI System and Deep Search Capabilities",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "_exporter_id": "gitstake-platform"
    },
    "item": [
        {
            "name": "System Health",
            "item": [
                {
                    "name": "Health Check",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/health",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "health"
                            ]
                        },
                        "description": "Check server health status"
                    }
                },
                {
                    "name": "API Info",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api"
                            ]
                        },
                        "description": "Get API documentation and available endpoints"
                    }
                }
            ],
            "description": "System health and information endpoints"
        },
        {
            "name": "User Analytics",
            "item": [
                {
                    "name": "Get All Users",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/users?page=1&limit=10&sortBy=createdAt&order=desc",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "users"
                            ],
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "key": "limit",
                                    "value": "10"
                                },
                                {
                                    "key": "sortBy",
                                    "value": "createdAt"
                                },
                                {
                                    "key": "order",
                                    "value": "desc"
                                }
                            ]
                        },
                        "description": "Get all analyzed users with pagination"
                    }
                },
                {
                    "name": "Get User by Username",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/users/{{username}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "users",
                                "{{username}}"
                            ]
                        },
                        "description": "Get specific user's complete data"
                    }
                },
                {
                    "name": "Get User Analytics",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/users/{{username}}/analytics",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "users",
                                "{{username}}",
                                "analytics"
                            ]
                        },
                        "description": "Get user's comprehensive analytics summary with developer level, insights, and detailed metrics"
                    }
                },
                {
                    "name": "Analyze GitHub User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"username\": \"{{username}}\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/users/analyze",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "users",
                                "analyze"
                            ]
                        },
                        "description": "Comprehensive GitHub user analysis with 50+ metrics, detailed data collections, developer level assessment, and AI insights"
                    }
                },
                {
                    "name": "Update User Analytics",
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/users/{{username}}/update",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "users",
                                "{{username}}",
                                "update"
                            ]
                        },
                        "description": "Refresh user's analytics data"
                    }
                },
                {
                    "name": "Delete User",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/users/{{username}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "users",
                                "{{username}}"
                            ]
                        },
                        "description": "Delete user data from the system"
                    }
                },
                {
                    "name": "Get Leaderboard",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/users/leaderboard?metric=proficiencyScore&limit=10",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "users",
                                "leaderboard"
                            ],
                            "query": [
                                {
                                    "key": "metric",
                                    "value": "proficiencyScore",
                                    "description": "Options: proficiencyScore, totalCommits, repoCount, totalPRs, streak.longest, innovationScore, collaborationScore"
                                },
                                {
                                    "key": "limit",
                                    "value": "10"
                                }
                            ]
                        },
                        "description": "Multi-metric leaderboard with developer levels and comprehensive ranking"
                    }
                }
            ],
            "description": "User analytics and management with comprehensive GitHub analysis and developer progression"
        },
        {
            "name": "GitHub API Integration",
            "item": [
                {
                    "name": "Profile",
                    "item": [
                        {
                            "name": "Get GitHub Profile",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/profile/{{username}}",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "profile",
                                        "{{username}}"
                                    ]
                                },
                                "description": "Get GitHub user profile information"
                            }
                        },
                        {
                            "name": "Get Profile Events",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/profile/{{username}}/events?page=1&per_page=30",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "profile",
                                        "{{username}}",
                                        "events"
                                    ],
                                    "query": [
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "per_page",
                                            "value": "30"
                                        }
                                    ]
                                },
                                "description": "Get user's recent GitHub events"
                            }
                        },
                        {
                            "name": "Get Followers",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/profile/{{username}}/followers?page=1&per_page=30",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "profile",
                                        "{{username}}",
                                        "followers"
                                    ],
                                    "query": [
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "per_page",
                                            "value": "30"
                                        }
                                    ]
                                },
                                "description": "Get user's followers"
                            }
                        },
                        {
                            "name": "Get Following",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/profile/{{username}}/following?page=1&per_page=30",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "profile",
                                        "{{username}}",
                                        "following"
                                    ],
                                    "query": [
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "per_page",
                                            "value": "30"
                                        }
                                    ]
                                },
                                "description": "Get users that the user is following"
                            }
                        }
                    ],
                    "description": "GitHub profile related endpoints"
                },
                {
                    "name": "Repositories",
                    "item": [
                        {
                            "name": "Get User Repositories",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/repos/{{username}}?type=owner&sort=updated&per_page=30&page=1",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "repos",
                                        "{{username}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "type",
                                            "value": "owner"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "updated"
                                        },
                                        {
                                            "key": "per_page",
                                            "value": "30"
                                        },
                                        {
                                            "key": "page",
                                            "value": "1"
                                        }
                                    ]
                                },
                                "description": "Get user's repositories"
                            }
                        },
                        {
                            "name": "Get Repository Details",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/repos/{{owner}}/{{repo}}",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "repos",
                                        "{{owner}}",
                                        "{{repo}}"
                                    ]
                                },
                                "description": "Get specific repository details"
                            }
                        },
                        {
                            "name": "Get Repository Commits",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/repos/{{owner}}/{{repo}}/commits?author={{username}}&page=1&per_page=30",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "repos",
                                        "{{owner}}",
                                        "{{repo}}",
                                        "commits"
                                    ],
                                    "query": [
                                        {
                                            "key": "author",
                                            "value": "{{username}}"
                                        },
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "per_page",
                                            "value": "30"
                                        }
                                    ]
                                },
                                "description": "Get repository commits"
                            }
                        },
                        {
                            "name": "Get Repository Contributors",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/repos/{{owner}}/{{repo}}/contributors",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "repos",
                                        "{{owner}}",
                                        "{{repo}}",
                                        "contributors"
                                    ]
                                },
                                "description": "Get repository contributors"
                            }
                        },
                        {
                            "name": "Get Repository Languages",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/repos/{{owner}}/{{repo}}/languages",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "repos",
                                        "{{owner}}",
                                        "{{repo}}",
                                        "languages"
                                    ]
                                },
                                "description": "Get repository programming languages"
                            }
                        },
                        {
                            "name": "Get Repository Stats",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/repos/{{owner}}/{{repo}}/stats",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "repos",
                                        "{{owner}}",
                                        "{{repo}}",
                                        "stats"
                                    ]
                                },
                                "description": "Get repository statistics"
                            }
                        }
                    ],
                    "description": "Repository management endpoints"
                },
                {
                    "name": "Pull Requests",
                    "item": [
                        {
                            "name": "Get Repository Pull Requests",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/repos/{{owner}}/{{repo}}/pulls?state=all&sort=created&direction=desc&page=1&per_page=30",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "repos",
                                        "{{owner}}",
                                        "{{repo}}",
                                        "pulls"
                                    ],
                                    "query": [
                                        {
                                            "key": "state",
                                            "value": "all"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "created"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "desc"
                                        },
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "per_page",
                                            "value": "30"
                                        }
                                    ]
                                },
                                "description": "Get repository pull requests"
                            }
                        },
                        {
                            "name": "Get Pull Request Details",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/repos/{{owner}}/{{repo}}/pulls/{{pull_number}}",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "repos",
                                        "{{owner}}",
                                        "{{repo}}",
                                        "pulls",
                                        "{{pull_number}}"
                                    ]
                                },
                                "description": "Get specific pull request details"
                            }
                        },
                        {
                            "name": "Get Pull Request Commits",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/repos/{{owner}}/{{repo}}/pulls/{{pull_number}}/commits",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "repos",
                                        "{{owner}}",
                                        "{{repo}}",
                                        "pulls",
                                        "{{pull_number}}",
                                        "commits"
                                    ]
                                },
                                "description": "Get pull request commits"
                            }
                        },
                        {
                            "name": "Get Pull Request Files",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/repos/{{owner}}/{{repo}}/pulls/{{pull_number}}/files",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "repos",
                                        "{{owner}}",
                                        "{{repo}}",
                                        "pulls",
                                        "{{pull_number}}",
                                        "files"
                                    ]
                                },
                                "description": "Get pull request changed files"
                            }
                        }
                    ],
                    "description": "Pull request management endpoints"
                },
                {
                    "name": "Issues",
                    "item": [
                        {
                            "name": "Get Repository Issues",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/repos/{{owner}}/{{repo}}/issues?state=all&sort=created&direction=desc&page=1&per_page=30",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "repos",
                                        "{{owner}}",
                                        "{{repo}}",
                                        "issues"
                                    ],
                                    "query": [
                                        {
                                            "key": "state",
                                            "value": "all"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "created"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "desc"
                                        },
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "per_page",
                                            "value": "30"
                                        }
                                    ]
                                },
                                "description": "Get repository issues"
                            }
                        },
                        {
                            "name": "Get Issue Details",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/repos/{{owner}}/{{repo}}/issues/{{issue_number}}",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "repos",
                                        "{{owner}}",
                                        "{{repo}}",
                                        "issues",
                                        "{{issue_number}}"
                                    ]
                                },
                                "description": "Get specific issue details"
                            }
                        },
                        {
                            "name": "Get Issue Comments",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/repos/{{owner}}/{{repo}}/issues/{{issue_number}}/comments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "repos",
                                        "{{owner}}",
                                        "{{repo}}",
                                        "issues",
                                        "{{issue_number}}",
                                        "comments"
                                    ]
                                },
                                "description": "Get issue comments"
                            }
                        }
                    ],
                    "description": "Issue management endpoints"
                },
                {
                    "name": "Advanced Analytics",
                    "item": [
                        {
                            "name": "Get Code Complexity",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/analytics/{{username}}/complexity",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "analytics",
                                        "{{username}}",
                                        "complexity"
                                    ]
                                },
                                "description": "Get code complexity analysis for user"
                            }
                        },
                        {
                            "name": "Get Activity Analytics",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/analytics/{{username}}/activity?timeframe=1year",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "analytics",
                                        "{{username}}",
                                        "activity"
                                    ],
                                    "query": [
                                        {
                                            "key": "timeframe",
                                            "value": "1year"
                                        }
                                    ]
                                },
                                "description": "Comprehensive activity analytics with developer level, time patterns, and trend analysis"
                            }
                        },
                        {
                            "name": "Get Collaboration Metrics",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/analytics/{{username}}/collaboration",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "analytics",
                                        "{{username}}",
                                        "collaboration"
                                    ]
                                },
                                "description": "Detailed collaboration metrics including cross-repo contributions and community engagement"
                            }
                        },
                        {
                            "name": "Get Code Quality",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/analytics/{{username}}/quality",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "analytics",
                                        "{{username}}",
                                        "quality"
                                    ]
                                },
                                "description": "Comprehensive code quality analysis with commit patterns and improvement suggestions"
                            }
                        },
                        {
                            "name": "Get Trend Analysis",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/analytics/{{username}}/trends?period=6months",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "analytics",
                                        "{{username}}",
                                        "trends"
                                    ],
                                    "query": [
                                        {
                                            "key": "period",
                                            "value": "6months"
                                        }
                                    ]
                                },
                                "description": "Detailed trend analysis with predictive insights and growth trajectory"
                            }
                        }
                    ],
                    "description": "Advanced analytics with comprehensive metrics, predictions, and developer insights"
                },
                {
                    "name": "Search",
                    "item": [
                        {
                            "name": "Search Repositories",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/search/repositories?q=javascript&sort=stars&order=desc&page=1&per_page=30",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "search",
                                        "repositories"
                                    ],
                                    "query": [
                                        {
                                            "key": "q",
                                            "value": "javascript"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "stars"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        },
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "per_page",
                                            "value": "30"
                                        }
                                    ]
                                },
                                "description": "Search GitHub repositories"
                            }
                        },
                        {
                            "name": "Search Users",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/search/users?q=developer&sort=followers&order=desc&page=1&per_page=30",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "search",
                                        "users"
                                    ],
                                    "query": [
                                        {
                                            "key": "q",
                                            "value": "developer"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "followers"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        },
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "per_page",
                                            "value": "30"
                                        }
                                    ]
                                },
                                "description": "Search GitHub users"
                            }
                        },
                        {
                            "name": "Search Code",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/search/code?q=function+language:javascript&sort=indexed&order=desc&page=1&per_page=30",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "search",
                                        "code"
                                    ],
                                    "query": [
                                        {
                                            "key": "q",
                                            "value": "function+language:javascript"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "indexed"
                                        },
                                        {
                                            "key": "order",
                                            "value": "desc"
                                        },
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "per_page",
                                            "value": "30"
                                        }
                                    ]
                                },
                                "description": "Search code on GitHub"
                            }
                        }
                    ],
                    "description": "GitHub search endpoints"
                },
                {
                    "name": "Organizations & Gists",
                    "item": [
                        {
                            "name": "Get Organization",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/orgs/{{org}}",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "orgs",
                                        "{{org}}"
                                    ]
                                },
                                "description": "Get organization details"
                            }
                        },
                        {
                            "name": "Get Organization Repos",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/orgs/{{org}}/repos?type=all&sort=updated&page=1&per_page=30",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "orgs",
                                        "{{org}}",
                                        "repos"
                                    ],
                                    "query": [
                                        {
                                            "key": "type",
                                            "value": "all"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "updated"
                                        },
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "per_page",
                                            "value": "30"
                                        }
                                    ]
                                },
                                "description": "Get organization repositories"
                            }
                        },
                        {
                            "name": "Get Organization Members",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/orgs/{{org}}/members?page=1&per_page=30",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "orgs",
                                        "{{org}}",
                                        "members"
                                    ],
                                    "query": [
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "per_page",
                                            "value": "30"
                                        }
                                    ]
                                },
                                "description": "Get organization members"
                            }
                        },
                        {
                            "name": "Get User Gists",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/gists/{{username}}?page=1&per_page=30",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "gists",
                                        "{{username}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "per_page",
                                            "value": "30"
                                        }
                                    ]
                                },
                                "description": "Get user's gists"
                            }
                        },
                        {
                            "name": "Get Gist Details",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/github/gists/{{gist_id}}",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "github",
                                        "gists",
                                        "{{gist_id}}"
                                    ]
                                },
                                "description": "Get specific gist details"
                            }
                        }
                    ],
                    "description": "Organization and gist endpoints"
                },
                {
                    "name": "Rate Limit",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/github/rate-limit",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "github",
                                "rate-limit"
                            ]
                        },
                        "description": "Get GitHub API rate limit status"
                    }
                }
            ],
            "description": "Complete GitHub API integration endpoints"
        },
        {
            "name": "AI Chat Assistant (Standard)",
            "item": [
                {
                    "name": "Ask GitStake Assistant",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"message\": \"How do I improve my developer level from Code Builder to Code Craftsman?\",\n  \"context\": {\n    \"username\": \"{{username}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/chat/ask",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "chat",
                                "ask"
                            ]
                        },
                        "description": "Ask GitStake AI Assistant for platform-specific guidance with human-like responses"
                    }
                },
                {
                    "name": "Ask About Developer Levels",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"message\": \"What's the difference between Code Wizard and Code Legend levels?\",\n  \"context\": {\n    \"username\": \"{{username}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/chat/ask",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "chat",
                                "ask"
                            ]
                        },
                        "description": "Ask about GitStake developer level progression system"
                    }
                },
                {
                    "name": "Ask About Code Quality",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"message\": \"How can I improve my code quality score on GitStake?\",\n  \"context\": {\n    \"username\": \"{{username}}\",\n    \"currentLevel\": \"Code Builder\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/chat/ask",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "chat",
                                "ask"
                            ]
                        },
                        "description": "Get advice on improving code quality and proficiency scores"
                    }
                },
                {
                    "name": "Get Assistant Health",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/chat/health",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "chat",
                                "health"
                            ]
                        },
                        "description": "Check standard AI assistant service health"
                    }
                }
            ],
            "description": "Standard AI chat assistant for GitStake platform-specific guidance"
        },
        {
            "name": "Deep Search AI (Web-Enhanced)",
            "item": [
                {
                    "name": "General Web Search",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"React hooks best practices 2025\",\n  \"context\": {\n    \"username\": \"{{username}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/deep-search/search",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "deep-search",
                                "search"
                            ]
                        },
                        "description": "Perform web search and get AI-enhanced human-like response with sources"
                    }
                },
                {
                    "name": "Search Development Topics",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"topic\": \"microservices architecture patterns\",\n  \"context\": {\n    \"username\": \"{{username}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/deep-search/development",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "deep-search",
                                "development"
                            ]
                        },
                        "description": "Search for development topics with enhanced context and best practices"
                    }
                },
                {
                    "name": "Search Programming Language Info",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"language\": \"TypeScript\",\n  \"specificTopic\": \"advanced types and generics\",\n  \"context\": {\n    \"username\": \"{{username}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/deep-search/language",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "deep-search",
                                "language"
                            ]
                        },
                        "description": "Search for specific programming language information and tutorials"
                    }
                },
                {
                    "name": "Search Language Overview",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"language\": \"Rust\",\n  \"context\": {\n    \"username\": \"{{username}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/deep-search/language",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "deep-search",
                                "language"
                            ]
                        },
                        "description": "Get general overview of a programming language"
                    }
                },
                {
                    "name": "Search GitHub Topics",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"topic\": \"pull request best practices\",\n  \"context\": {\n    \"username\": \"{{username}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/deep-search/github",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "deep-search",
                                "github"
                            ]
                        },
                        "description": "Search for GitHub and open source related topics"
                    }
                },
                {
                    "name": "Search Open Source Contribution",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"topic\": \"how to contribute to open source projects\",\n  \"context\": {\n    \"username\": \"{{username}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/deep-search/github",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "deep-search",
                                "github"
                            ]
                        },
                        "description": "Get guidance on open source contribution"
                    }
                },
                {
                    "name": "Search Latest Tech Trends",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"query\": \"latest web development trends 2025\",\n  \"context\": {\n    \"username\": \"{{username}}\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/deep-search/search",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "deep-search",
                                "search"
                            ]
                        },
                        "description": "Search for current technology trends and developments"
                    }
                },
                {
                    "name": "Get Deep Search Health",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/deep-search/health",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "deep-search",
                                "health"
                            ]
                        },
                        "description": "Check deep search AI service health status"
                    }
                }
            ],
            "description": "Web-enhanced AI assistant with real-time search capabilities and source attribution"
        },
        {
            "name": "Email Notifications",
            "item": [
                {
                    "name": "Send Registration Email",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"developer@example.com\",\n  \"name\": \"John Developer\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/email/send-registration",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "email",
                                "send-registration"
                            ]
                        },
                        "description": "Send welcome registration email"
                    }
                },
                {
                    "name": "Send Level Up Email",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"developer@example.com\",\n  \"name\": \"John Developer\",\n  \"oldLevel\": {\n    \"name\": \"Code Builder\",\n    \"emoji\": \"🔨\"\n  },\n  \"newLevel\": {\n    \"name\": \"Code Craftsman\",\n    \"emoji\": \"⚡\",\n    \"description\": \"Crafting quality code with growing expertise\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/email/send-level-up",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "email",
                                "send-level-up"
                            ]
                        },
                        "description": "Send level up achievement email"
                    }
                },
                {
                    "name": "Send Onboarding Email",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"developer@example.com\",\n  \"name\": \"John Developer\",\n  \"githubUsername\": \"johndev\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/email/send-onboarding",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "email",
                                "send-onboarding"
                            ]
                        },
                        "description": "Send profile analysis completion email"
                    }
                },
                {
                    "name": "Send Leaderboard Email",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"developer@example.com\",\n  \"name\": \"John Developer\",\n  \"rank\": \"5\",\n  \"metric\": \"Proficiency Score\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/email/send-leaderboard",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "email",
                                "send-leaderboard"
                            ]
                        },
                        "description": "Send leaderboard achievement email"
                    }
                },
                {
                    "name": "Preview Registration Email",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/email/preview/registration?name=John Developer",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "email",
                                "preview",
                                "registration"
                            ],
                            "query": [
                                {
                                    "key": "name",
                                    "value": "John Developer"
                                }
                            ]
                        },
                        "description": "Preview registration email template"
                    }
                },
                {
                    "name": "Preview Level Up Email",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/email/preview/level-up?name=Jane Coder",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "email",
                                "preview",
                                "level-up"
                            ],
                            "query": [
                                {
                                    "key": "name",
                                    "value": "Jane Coder"
                                }
                            ]
                        },
                        "description": "Preview level up email template"
                    }
                },
                {
                    "name": "Preview Onboarding Email",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/email/preview/onboarding?name=Alex Developer&githubUsername=alexdev",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "email",
                                "preview",
                                "onboarding"
                            ],
                            "query": [
                                {
                                    "key": "name",
                                    "value": "Alex Developer"
                                },
                                {
                                    "key": "githubUsername",
                                    "value": "alexdev"
                                }
                            ]
                        },
                        "description": "Preview onboarding email template"
                    }
                },
                {
                    "name": "Preview Leaderboard Email",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/email/preview/leaderboard?name=Sarah Coder&rank=5&metric=Proficiency Score",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "email",
                                "preview",
                                "leaderboard"
                            ],
                            "query": [
                                {
                                    "key": "name",
                                    "value": "Sarah Coder"
                                },
                                {
                                    "key": "rank",
                                    "value": "5"
                                },
                                {
                                    "key": "metric",
                                    "value": "Proficiency Score"
                                }
                            ]
                        },
                        "description": "Preview leaderboard email template"
                    }
                }
            ],
            "description": "Email notification system endpoints"
        },
        {
            "name": "Quest System",
            "item": [
                {
                    "name": "Quest Management",
                    "item": [
                        {
                            "name": "Generate Quest",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"developerLevel\": \"BUILDER\",\n  \"challengeType\": \"algorithm\",\n  \"techStack\": [\"JavaScript\", \"Node.js\"],\n  \"theme\": \"adventure\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/generate",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "generate"
                                    ]
                                },
                                "description": "Generate a new quest for specific developer level using AI"
                            }
                        },
                        {
                            "name": "Generate Weekly Quests",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/generate-weekly",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "generate-weekly"
                                    ]
                                },
                                "description": "Generate quests for all 8 developer levels for the current week"
                            }
                        },
                        {
                            "name": "Auto-Generate Weekly Quests",
                            "request": {
                                "method": "POST",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/auto-generate-weekly",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "auto-generate-weekly"
                                    ]
                                },
                                "description": "Auto-generate weekly quests (cron job endpoint)"
                            }
                        },
                        {
                            "name": "Get Active Quests",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/active?developerLevel=BUILDER",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "active"
                                    ],
                                    "query": [
                                        {
                                            "key": "developerLevel",
                                            "value": "BUILDER",
                                            "description": "Filter by developer level (optional)"
                                        }
                                    ]
                                },
                                "description": "Get all active quests, optionally filtered by developer level"
                            }
                        },
                        {
                            "name": "Get Quest by ID",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/{{questId}}?includeSolution=false",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "{{questId}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "includeSolution",
                                            "value": "false",
                                            "description": "Include solution in response (admin only)"
                                        }
                                    ]
                                },
                                "description": "Get quest details by quest ID"
                            }
                        }
                    ]
                },
                {
                    "name": "Quest Participation",
                    "item": [
                        {
                            "name": "Stake for Quest",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"username\": \"developer123\",\n  \"email\": \"developer@example.com\",\n  \"developerLevel\": \"BUILDER\",\n  \"walletAddress\": \"0x742d35Cc6634C0532925a3b8D4C9db96590c6C87\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/{{questId}}/stake",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "{{questId}}",
                                        "stake"
                                    ]
                                },
                                "description": "Stake user for a quest during staking period (wallet address optional)"
                            }
                        },
                        {
                            "name": "Submit Solution",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"username\": \"developer123\",\n  \"email\": \"developer@example.com\",\n  \"solution\": \"function solve(input) {\\n  // Your solution code here\\n  return result;\\n}\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/{{questId}}/submit",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "{{questId}}",
                                        "submit"
                                    ]
                                },
                                "description": "Submit solution for a quest during challenge period"
                            }
                        },
                        {
                            "name": "Get Quest Leaderboard",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/{{questId}}/leaderboard",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "{{questId}}",
                                        "leaderboard"
                                    ]
                                },
                                "description": "Get quest leaderboard with rankings and scores"
                            }
                        }
                    ]
                },
                {
                    "name": "User Quest History",
                    "item": [
                        {
                            "name": "Get User Quest History",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/user/{{username}}/history?page=1&limit=10",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "user",
                                        "{{username}}",
                                        "history"
                                    ],
                                    "query": [
                                        {
                                            "key": "page",
                                            "value": "1",
                                            "description": "Page number for pagination"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "10",
                                            "description": "Number of quests per page"
                                        }
                                    ]
                                },
                                "description": "Get user's quest participation history with pagination"
                            }
                        }
                    ]
                },
                {
                    "name": "Admin/System",
                    "item": [
                        {
                            "name": "Update Quest Statuses",
                            "request": {
                                "method": "PUT",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/update-statuses",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "update-statuses"
                                    ]
                                },
                                "description": "Update quest statuses based on schedule (admin/cron)"
                            }
                        },
                        {
                            "name": "Send Quest Notifications",
                            "request": {
                                "method": "POST",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/send-notifications",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "send-notifications"
                                    ]
                                },
                                "description": "Send scheduled quest notifications (admin/cron)"
                            }
                        },
                        {
                            "name": "Process Quest Results",
                            "request": {
                                "method": "POST",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/{{questId}}/process-results",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "{{questId}}",
                                        "process-results"
                                    ]
                                },
                                "description": "Process quest results and determine winners (admin)"
                            }
                        },
                        {
                            "name": "Process All Closed Quests",
                            "request": {
                                "method": "POST",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/process-all-closed",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "process-all-closed"
                                    ]
                                },
                                "description": "Bulk process all quests in closed status (admin)"
                            }
                        },
                        {
                            "name": "Update User Wallet",
                            "request": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"username\": \"developer123\",\n  \"walletAddress\": \"0x742d35Cc6634C0532925a3b8D4C9db96590c6C87\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/update-wallet",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "update-wallet"
                                    ]
                                },
                                "description": "Update user's wallet address for crypto rewards"
                            }
                        },
                        {
                            "name": "Get Crypto Reward Rates",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/crypto-rates",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "crypto-rates"
                                    ]
                                },
                                "description": "Get crypto reward rates for all developer levels"
                            }
                        }
                    ]
                }
            ],
            "description": "AI-powered quest system with difficulty-scaled challenges and crypto rewards for all 8 developer levels"
        },
        {
            "name": "Boss Battle System",
            "item": [
                {
                    "name": "Boss Battle Management",
                    "item": [
                        {
                            "name": "Create Boss Battle",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"username\": \"{{username}}\",\n  \"email\": \"developer@example.com\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/create",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "create"
                                    ]
                                },
                                "description": "Create AI-generated personalized boss battle - analyzes user's GitHub profile, coding strengths, and generates challenge one level above current developer level using Pollinations.ai"
                            }
                        },
                        {
                            "name": "Create Boss Battle for Advanced User",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"username\": \"advanced_developer\",\n  \"email\": \"advanced@example.com\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/create",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "create"
                                    ]
                                },
                                "description": "Create boss battle for advanced developer - AI will generate more complex challenges based on higher skill level"
                            }
                        },
                        {
                            "name": "Get Boss Battle Details",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/{{battleId}}?username={{username}}",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "{{battleId}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "username",
                                            "value": "{{username}}",
                                            "description": "Username for authorization"
                                        }
                                    ]
                                },
                                "description": "Get detailed information about a specific boss battle including problem statement and boss characteristics"
                            }
                        },
                        {
                            "name": "Start Boss Battle",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"username\": \"{{username}}\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/{{battleId}}/start",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "{{battleId}}",
                                        "start"
                                    ]
                                },
                                "description": "Start the boss battle and change status from 'initiated' to 'facing'"
                            }
                        },
                        {
                            "name": "Submit Boss Battle Solution",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"username\": \"{{username}}\",\n  \"solution\": \"function solveBoss(input) {\\n  // Epic boss battle solution\\n  const data = JSON.parse(input);\\n  return data.reduce((sum, num) => sum + num, 0);\\n}\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/{{battleId}}/submit",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "{{battleId}}",
                                        "submit"
                                    ]
                                },
                                "description": "Submit solution for boss battle (max 3 attempts, 72-hour time limit)"
                            }
                        },
                        {
                            "name": "Submit Advanced Algorithm Solution",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"username\": \"{{username}}\",\n  \"solution\": \"function defeatBoss(input) {\\n  // Advanced boss battle solution with AI evaluation\\n  const graph = buildGraph(input);\\n  return dijkstraAlgorithm(graph);\\n}\\n\\nfunction buildGraph(data) {\\n  // Efficient graph construction\\n  const graph = new Map();\\n  data.edges.forEach(([from, to, weight]) => {\\n    if (!graph.has(from)) graph.set(from, []);\\n    graph.get(from).push({ node: to, weight });\\n  });\\n  return graph;\\n}\\n\\nfunction dijkstraAlgorithm(graph) {\\n  // Optimized shortest path with priority queue\\n  const distances = new Map();\\n  const pq = new PriorityQueue();\\n  // Implementation details...\\n  return shortestPath;\\n}\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/{{battleId}}/submit",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "{{battleId}}",
                                        "submit"
                                    ]
                                },
                                "description": "Submit advanced algorithm solution - AI evaluates correctness, efficiency, code quality, and boss challenge requirements"
                            }
                        },
                        {
                            "name": "Submit Perfect Solution (High Score)",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"username\": \"{{username}}\",\n  \"solution\": \"function solveBoss(input) {\\n  // Perfect solution with optimal time/space complexity\\n  // This solution demonstrates mastery of the target level\\n  \\n  const data = JSON.parse(input);\\n  \\n  // Edge case handling\\n  if (!data || data.length === 0) return 0;\\n  \\n  // Optimal algorithm implementation\\n  const result = optimizedAlgorithm(data);\\n  \\n  return result;\\n}\\n\\n// Helper function with clean, efficient implementation\\nfunction optimizedAlgorithm(data) {\\n  // O(n log n) solution with proper error handling\\n  try {\\n    return data\\n      .filter(item => item != null)\\n      .map(item => processItem(item))\\n      .reduce((acc, val) => acc + val, 0);\\n  } catch (error) {\\n    console.error('Processing error:', error);\\n    return 0;\\n  }\\n}\\n\\nfunction processItem(item) {\\n  // Clean, readable processing logic\\n  return typeof item === 'number' ? item * 2 : 0;\\n}\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/{{battleId}}/submit",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "{{battleId}}",
                                        "submit"
                                    ]
                                },
                                "description": "Submit a well-crafted solution designed to score 85-95 points with AI evaluation - includes optimal algorithm, error handling, and clean code structure"
                            }
                        },
                        {
                            "name": "Submit Suboptimal Solution (Lower Score)",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"username\": \"{{username}}\",\n  \"solution\": \"function solveBoss(input) {\\n  // Basic solution - will score lower due to inefficiency\\n  var data = JSON.parse(input);\\n  var result = 0;\\n  for (var i = 0; i < data.length; i++) {\\n    for (var j = 0; j < data.length; j++) {\\n      if (i != j) {\\n        result += data[i];\\n      }\\n    }\\n  }\\n  return result;\\n}\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/{{battleId}}/submit",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "{{battleId}}",
                                        "submit"
                                    ]
                                },
                                "description": "Submit an inefficient solution to test AI evaluation - should score 50-65 points due to O(n²) complexity and poor code quality"
                            }
                        }
                    ],
                    "description": "Core boss battle management endpoints with AI-powered creation and evaluation"
                },
                {
                    "name": "AI Evaluation Testing",
                    "item": [
                        {
                            "name": "Test AI Evaluation - Perfect Code",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"username\": \"{{username}}\",\n  \"solution\": \"function solveBoss(input) {\\n  /**\\n   * Optimal solution with comprehensive approach\\n   * Time Complexity: O(n log n)\\n   * Space Complexity: O(n)\\n   */\\n  \\n  // Input validation and edge case handling\\n  if (!input || typeof input !== 'string') {\\n    throw new Error('Invalid input format');\\n  }\\n  \\n  let data;\\n  try {\\n    data = JSON.parse(input);\\n  } catch (error) {\\n    throw new Error('Failed to parse input JSON');\\n  }\\n  \\n  if (!Array.isArray(data) || data.length === 0) {\\n    return 0;\\n  }\\n  \\n  // Efficient algorithm implementation\\n  const processedData = data\\n    .filter(item => typeof item === 'number' && !isNaN(item))\\n    .sort((a, b) => a - b);\\n  \\n  // Apply boss-specific logic\\n  const result = processedData.reduce((acc, curr, index) => {\\n    const weight = Math.pow(2, index % 3);\\n    return acc + (curr * weight);\\n  }, 0);\\n  \\n  return Math.round(result * 100) / 100; // Round to 2 decimal places\\n}\\n\\n// Additional helper functions for modularity\\nfunction validateInput(input) {\\n  return input && typeof input === 'string';\\n}\\n\\nfunction calculateWeight(index) {\\n  return Math.pow(2, index % 3);\\n}\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/{{battleId}}/submit",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "{{battleId}}",
                                        "submit"
                                    ]
                                },
                                "description": "Test AI evaluation with perfect code - should score 90-100 points. Includes optimal algorithm, comprehensive error handling, documentation, and modular design."
                            }
                        },
                        {
                            "name": "Test AI Evaluation - Good Code",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"username\": \"{{username}}\",\n  \"solution\": \"function solveBoss(input) {\\n  // Good solution with minor optimization opportunities\\n  const data = JSON.parse(input);\\n  \\n  if (!data || data.length === 0) {\\n    return 0;\\n  }\\n  \\n  // Decent algorithm but could be more efficient\\n  let result = 0;\\n  for (let i = 0; i < data.length; i++) {\\n    if (typeof data[i] === 'number') {\\n      result += data[i] * (i + 1);\\n    }\\n  }\\n  \\n  return result;\\n}\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/{{battleId}}/submit",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "{{battleId}}",
                                        "submit"
                                    ]
                                },
                                "description": "Test AI evaluation with good code - should score 75-85 points. Functional solution with basic error handling but room for optimization."
                            }
                        },
                        {
                            "name": "Test AI Evaluation - Poor Code",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"username\": \"{{username}}\",\n  \"solution\": \"function solveBoss(input) {\\n  // Poor solution with multiple issues\\n  var data = JSON.parse(input);\\n  var result = 0;\\n  for (var i = 0; i < data.length; i++) {\\n    for (var j = 0; j < data.length; j++) {\\n      for (var k = 0; k < data.length; k++) {\\n        result = result + data[i];\\n      }\\n    }\\n  }\\n  return result;\\n}\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/{{battleId}}/submit",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "{{battleId}}",
                                        "submit"
                                    ]
                                },
                                "description": "Test AI evaluation with poor code - should score 40-60 points. O(n³) complexity, no error handling, inefficient algorithm."
                            }
                        },
                        {
                            "name": "Test AI Evaluation - Broken Code",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"username\": \"{{username}}\",\n  \"solution\": \"function solveBoss(input) {\\n  // Broken solution with syntax errors\\n  var data = JSON.parse(input\\n  var result = 0\\n  for (var i = 0; i < data.length i++) {\\n    result += data[i]\\n  }\\n  return result\\n}\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/{{battleId}}/submit",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "{{battleId}}",
                                        "submit"
                                    ]
                                },
                                "description": "Test AI evaluation with broken code - should score 0 points and be marked as INVALID. Contains syntax errors and won't execute properly."
                            }
                        },
                        {
                            "name": "Test AI Validation - Wrong Logic",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"username\": \"{{username}}\",\n  \"solution\": \"function solveBoss(input) {\\n  // Solution with wrong logic - will fail test cases\\n  const data = JSON.parse(input);\\n  \\n  // Wrong algorithm - just returns first element\\n  return data[0] || 0;\\n}\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/{{battleId}}/submit",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "{{battleId}}",
                                        "submit"
                                    ]
                                },
                                "description": "Test AI validation with wrong logic - should score 0 points and be marked as INVALID because it fails test cases despite being syntactically correct."
                            }
                        }
                    ],
                    "description": "Test AI-only validation and evaluation system. Solutions must pass ALL test cases to be valid. Invalid solutions score 0 points regardless of code quality."
                },
                {
                    "name": "User Boss Battle Data",
                    "item": [
                        {
                            "name": "Get User Boss Battle History",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/user/{{username}}/history?status=won&limit=10",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "user",
                                        "{{username}}",
                                        "history"
                                    ],
                                    "query": [
                                        {
                                            "key": "status",
                                            "value": "won",
                                            "description": "Filter by status: initiated, facing, won, lost, expired"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "10",
                                            "description": "Number of battles to return"
                                        }
                                    ]
                                },
                                "description": "Get user's boss battle history with summary statistics"
                            }
                        },
                        {
                            "name": "Get All User Boss Battles",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/user/{{username}}/history?limit=20",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "user",
                                        "{{username}}",
                                        "history"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "20",
                                            "description": "Get all boss battles regardless of status"
                                        }
                                    ]
                                },
                                "description": "Get all user's boss battles with complete history and statistics"
                            }
                        },
                        {
                            "name": "Get Active Boss Battles",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/user/{{username}}/history?status=facing&limit=5",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "user",
                                        "{{username}}",
                                        "history"
                                    ],
                                    "query": [
                                        {
                                            "key": "status",
                                            "value": "facing",
                                            "description": "Get currently active boss battles"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "5",
                                            "description": "Limit active battles"
                                        }
                                    ]
                                },
                                "description": "Get user's currently active boss battles that are in progress"
                            }
                        },
                        {
                            "name": "Get User Perks & Achievements",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/user/{{username}}/perks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "user",
                                        "{{username}}",
                                        "perks"
                                    ]
                                },
                                "description": "Get user's perks, badges, titles, experience points, and achievements from boss battles"
                            }
                        }
                    ],
                    "description": "User-specific boss battle data and achievements"
                },
                {
                    "name": "Boss Battle Leaderboard",
                    "item": [
                        {
                            "name": "Get Boss Battle Leaderboard",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/leaderboard?timeframe=month&limit=20",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "leaderboard"
                                    ],
                                    "query": [
                                        {
                                            "key": "timeframe",
                                            "value": "month",
                                            "description": "Timeframe: all, week, month"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "20",
                                            "description": "Number of top players to return"
                                        }
                                    ]
                                },
                                "description": "Get boss battle leaderboard with top performers, battles won, and average scores"
                            }
                        },
                        {
                            "name": "Get Weekly Boss Leaderboard",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/leaderboard?timeframe=week&limit=10",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "leaderboard"
                                    ],
                                    "query": [
                                        {
                                            "key": "timeframe",
                                            "value": "week",
                                            "description": "Weekly leaderboard"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "10",
                                            "description": "Top 10 players"
                                        }
                                    ]
                                },
                                "description": "Get weekly boss battle leaderboard for recent performance"
                            }
                        }
                    ],
                    "description": "Boss battle leaderboard and rankings"
                },
                {
                    "name": "Admin Boss Battle Management",
                    "item": [
                        {
                            "name": "Cleanup Expired Boss Battles",
                            "request": {
                                "method": "POST",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/quests/boss-battle/admin/cleanup",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "quests",
                                        "boss-battle",
                                        "admin",
                                        "cleanup"
                                    ]
                                },
                                "description": "Admin endpoint to cleanup expired boss battles (72+ hours old)"
                            }
                        }
                    ],
                    "description": "Administrative boss battle management endpoints"
                }
            ],
            "description": "🐉 Epic AI-powered boss battle system using Pollinations.ai for challenge generation and solution evaluation. Features personalized challenges one level above user's current developer level, intelligent scoring (correctness, efficiency, code quality, boss requirements), detailed AI feedback, 72-hour time limit, and max 3 attempts. Each solution is evaluated by AI for precise scoring and constructive feedback."
        },
        {
            "name": "Cron Job Management",
            "item": [
                {
                    "name": "Get Cron Jobs Status",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/cron/status",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "cron",
                                "status"
                            ]
                        },
                        "description": "Get status of all cron jobs (running/stopped)"
                    }
                },
                {
                    "name": "Start All Cron Jobs",
                    "request": {
                        "method": "POST",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/cron/start-all",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "cron",
                                "start-all"
                            ]
                        },
                        "description": "Start all cron jobs"
                    }
                },
                {
                    "name": "Stop All Cron Jobs",
                    "request": {
                        "method": "POST",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/cron/stop-all",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "cron",
                                "stop-all"
                            ]
                        },
                        "description": "Stop all cron jobs"
                    }
                },
                {
                    "name": "Trigger Weekly Quest Generation",
                    "request": {
                        "method": "POST",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/cron/trigger/weeklyQuestGeneration",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "cron",
                                "trigger",
                                "weeklyQuestGeneration"
                            ]
                        },
                        "description": "Manually trigger weekly quest generation for all 8 levels"
                    }
                },
                {
                    "name": "Trigger Status Update",
                    "request": {
                        "method": "POST",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/cron/trigger/statusUpdate",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "cron",
                                "trigger",
                                "statusUpdate"
                            ]
                        },
                        "description": "Manually trigger quest status updates"
                    }
                },
                {
                    "name": "Trigger Notifications",
                    "request": {
                        "method": "POST",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/cron/trigger/notifications",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "cron",
                                "trigger",
                                "notifications"
                            ]
                        },
                        "description": "Manually trigger scheduled notifications"
                    }
                },
                {
                    "name": "Trigger Results Processing",
                    "request": {
                        "method": "POST",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/cron/trigger/resultsProcessing",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "cron",
                                "trigger",
                                "resultsProcessing"
                            ]
                        },
                        "description": "Manually trigger quest results processing with crypto rewards"
                    }
                }
            ],
            "description": "Automated cron job management for quest lifecycle"
        },
        {
            "name": "Authentication",
            "item": [
                {
                    "name": "User Login",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/auth/login",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "auth",
                                "login"
                            ]
                        },
                        "description": "User login endpoint"
                    }
                },
                {
                    "name": "User Registration",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"John Developer\",\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/auth/register",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "auth",
                                "register"
                            ]
                        },
                        "description": "User registration endpoint"
                    }
                },
                {
                    "name": "User Logout",
                    "request": {
                        "method": "POST",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/auth/logout",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "auth",
                                "logout"
                            ]
                        },
                        "description": "User logout endpoint"
                    }
                }
            ],
            "description": "Authentication endpoints"
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        }
    ],
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://localhost:3000",
            "type": "string"
        },
        {
            "key": "username",
            "value": "octocat",
            "type": "string"
        },
        {
            "key": "owner",
            "value": "octocat",
            "type": "string"
        },
        {
            "key": "repo",
            "value": "Hello-World",
            "type": "string"
        },
        {
            "key": "pull_number",
            "value": "1",
            "type": "string"
        },
        {
            "key": "issue_number",
            "value": "1",
            "type": "string"
        },
        {
            "key": "org",
            "value": "github",
            "type": "string"
        },
        {
            "key": "gist_id",
            "value": "example-gist-id",
            "type": "string"
        },
        {
            "key": "questId",
            "value": "QUEST_BUILDER_W45_2024",
            "type": "string"
        },
        {
            "key": "githubUsername",
            "value": "developer123",
            "type": "string"
        },
        {
            "key": "walletAddress",
            "value": "0x742d35Cc6634C0532925a3b8D4C9db96590c6C87",
            "type": "string"
        },
        {
            "key": "battleId",
            "value": "BOSS_DEVELOPER123_CRAFTSMAN_1703123456789",
            "type": "string"
        }
    ]
}